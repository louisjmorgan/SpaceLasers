{"version":3,"file":"955.bundle.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/startup chunk dependencies","webpack:///./src/Model/mission.js","webpack:///./src/Model/workers/missionWorker.js","webpack:///./src/Util/constants.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(212),\n\t\t__webpack_require__.e(121)\n\t]).then(next);\n};","/* eslint-disable consistent-return */\n/* eslint-disable max-len */\n/* eslint-disable no-param-reassign */\nimport * as Yup from 'yup';\nimport { generateTLE, twoline2satrec } from '../Util/astronomy';\nimport { FRAMES, SIM_LENGTH } from '../Util/constants';\nimport {\n  createSatellite, createPowerSatellite, getOffsets, getIndexCounts, generateIndices,\n} from './satellite';\nimport {\n  getTimeArray,\n  getSatellitePositions,\n  getSunPositions,\n  getEclipsedArray,\n  getCurrentDuties,\n  getBeams,\n  getBeamDuties,\n  getChargeStates,\n  getDischargeSaved,\n  getEarthRotationAngles,\n  getSources,\n  getLowestChargeState,\n} from './simulation';\n\nconst SatelliteSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .trim(),\n  color: Yup.string()\n    .trim()\n    .matches(/^#([0-9a-f]{3}|[0-9a-f]{6})$/i),\n  orbit: Yup.object().shape({\n    tle: Yup.string(),\n    list: Yup.string(),\n    meanMotionDot: Yup.number()\n      .min(-1, 'Must be more than -1')\n      .max(1, 'Must be less than 1')\n      .required('meanMotionDot is required'),\n    bstar: Yup.number()\n      .min(-2, 'Must be between -2 and 2')\n      .max(2, 'Must be between -2 and 2')\n      .required('bstar is required'),\n    inclination: Yup.number()\n      .min(0, 'Must be 0-360°')\n      .max(360, 'Must be 0-360°')\n      .required('inclination is required'),\n    rightAscension: Yup.number()\n      .min(0, 'Must be 0-360°')\n      .max(360, 'Must be 0-360°')\n      .required('right ascension is required'),\n    eccentricity: Yup.number()\n      .min(0, 'Must be between 0 and 1')\n      .max(1, 'Must be between 0 and 1')\n      .required('eccentricity is required'),\n    perigee: Yup.number()\n      .min(0, 'Must be 0-360°')\n      .max(360, 'Must be 0-360°')\n      .required('perigee is required'),\n    meanAnomaly: Yup.number()\n      .min(0, 'Must be 0-360°')\n      .max(360, 'Must be 0-360°')\n      .required('mean anomaly is required'),\n    meanMotion: Yup.number()\n      .min(0, 'Must be greater than 0')\n      .max(16, 'Must be less than 16')\n      .required('mean motion is required'),\n  }),\n  power: Yup.object().shape({\n    pv: Yup.object().shape({\n      voltage: Yup.number()\n        .min(0, 'Must be positive')\n        .required('pv voltage is required'),\n      currentDensity: Yup.number()\n        .min(0, 'Must be positive')\n        .required('pv current density is required'),\n      area: Yup.number()\n        .min(0, 'Must be greater than 0')\n        .required('pv area is required'),\n      powerStoringConsumption: Yup.number()\n        .min(0, 'Must be greater than 0')\n        .required('Power storing consumption is required'),\n      preset: Yup.string()\n        .oneOf(['small', 'medium', 'large', 'custom']),\n    }),\n    battery: Yup.object().shape({\n      voltage: Yup.number()\n        .min(0, 'Must be positive')\n        .required('battery voltage is required'),\n      capacity: Yup.number()\n        .min(0, 'Must be greater than 0')\n        .required('battery capacity is required'),\n      preset: Yup.string()\n        .oneOf(['small', 'medium', 'large', 'custom']),\n    }),\n  }),\n  duties: Yup.array()\n    .of(\n      Yup.object().shape({\n        type: Yup.string()\n          .oneOf(['cyclical'])\n          .required('Type is required'),\n        name: Yup.string()\n          .min(2, 'Too Short!')\n          .max(30, 'Too Long!')\n          .required('required!'),\n        priority: Yup.number()\n          .integer()\n          .min(1)\n          .required('Priority is required'),\n        consumption: Yup.number()\n          .min(0, 'Must be positive')\n          .required('Consumption is required'),\n        duration: Yup.number()\n          .min(0, 'Must be positive')\n          .when(\n            'type',\n            {\n              is: 'cyclical',\n              then: Yup.number().required('Duration is required'),\n            },\n          ),\n        cycles: Yup.number()\n          .min(0, 'Must be positive')\n          .when(\n            'type',\n            {\n              is: 'cyclical',\n              then: Yup.number().required('Cycles is required'),\n            },\n          ),\n      }),\n    ),\n});\n\nconst MissionSchema = Yup.object().shape({\n  constellations: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .trim(),\n      list: Yup.string(),\n      payload: SatelliteSchema,\n      satelliteCount: Yup.number().min(0).required('Satellite count is required'),\n      satellites: Yup.array().of(SatelliteSchema),\n      spacePowersCount: Yup.number()\n        .integer()\n        .min(0, 'Must be an integer greater than or equal to 0'),\n      spacePowerIndices: Yup.array().of(\n        Yup.number()\n          .min(0),\n      ),\n      offsets: Yup.object().shape({\n        inclination: Yup.number()\n          .min(0, 'Must be 0-36°')\n          .max(36, 'Must be 0-36°')\n          .required('inclination is required'),\n        rightAscension: Yup.number()\n          .min(0, 'Must be 0-36°')\n          .max(36, 'Must be 0-36°')\n          .required('right ascension is required'),\n        eccentricity: Yup.number()\n          .min(0, 'Must be between 0 and 1')\n          .max(1, 'Must be between 0 and 1')\n          .required('eccentricity is required'),\n        perigee: Yup.number()\n          .min(0, 'Must be 0-36°')\n          .max(36, 'Must be 0-36°')\n          .required('perigee is required'),\n        meanAnomaly: Yup.number()\n          .min(0, 'Must be 0-360°')\n          .max(360, 'Must be 0-360°')\n          .required('mean anomaly is required'),\n        meanMotion: Yup.number()\n          .min(0, 'Must be greater than 0')\n          .max(16, 'Must be less than 16')\n          .required('mean motion is required'),\n      }),\n    }),\n  ),\n});\n\nconst simulateBaseData = (baseSatellite, length, frames) => {\n  const tles = generateTLE({\n    ...baseSatellite.orbit,\n    epoch: new Date(baseSatellite.orbit.epoch),\n  });\n  const orbit = twoline2satrec(tles.tle1, tles.tle2);\n  const time = getTimeArray(orbit.epochdate, length, frames);\n  const sun = getSunPositions(time);\n  const earth = getEarthRotationAngles(time);\n  return [time, sun, earth];\n};\n\nconst initializeConstellations = (constellations) => constellations.map((constellation) => ({\n  name: constellation.name,\n  id: constellation.id,\n  color: constellation.color,\n  satellites: constellation.satellites.map((satellite) => satellite.id),\n}));\n\nconst initializeCustomers = (constellations, time, sun) => {\n  const customers = [];\n  constellations.forEach((constellation) => {\n    constellation.satellites.forEach((satellite) => {\n      customers.push(createSatellite(satellite, constellation.id));\n    });\n  });\n  customers.forEach((customer) => {\n    customer.positions = getSatellitePositions(customer.params, time);\n    customer.performance = {\n      currentDuties: getCurrentDuties(customer.params.load.duties, time),\n      isEclipsed: getEclipsedArray(customer, sun, time),\n    };\n  });\n  return customers;\n};\n\nconst initializeSpacePowers = (constellations) => {\n  const spacePowers = [];\n  constellations.forEach((constellation) => {\n    let indices;\n    if (!constellation.spacePowerIndices) indices = generateIndices(constellation.spacePowersCount, constellation.satellites.length);\n    else indices = constellation.spacePowerIndices;\n    const counts = getIndexCounts(constellation.satellites.length, indices);\n    const offsets = getOffsets(constellation.offsets, counts);\n    constellation.satellites.forEach((satellite, index) => {\n      if (!offsets[index]) return;\n      return offsets[index].forEach((offset) => {\n        spacePowers.push(createPowerSatellite(\n          `Space Power ${index + 1}`,\n          satellite.orbit,\n          offset,\n          constellation.id,\n        ));\n      });\n    });\n  });\n\n  return spacePowers;\n};\n\nconst simulateSpacePowers = (time, sun, constellations, customers) => {\n  const spacePowers = initializeSpacePowers(constellations);\n  const beams = [];\n  spacePowers.forEach((spacePower) => {\n    spacePower.positions = getSatellitePositions(spacePower.params, time);\n    const satBeams = getBeams(spacePower, customers.filter((c) => c.constellation === spacePower.constellation), time);\n    spacePower.performance = {\n      currentDuties: getBeamDuties(satBeams, time),\n      isEclipsed: getEclipsedArray(spacePower, sun, time),\n    };\n    spacePower.performance.sources = getSources(spacePower, satBeams, time);\n    spacePower.performance.chargeState = getChargeStates(spacePower, time);\n    beams.push(...satBeams);\n  });\n  return [spacePowers, beams];\n};\n\nconst simulateBatteries = (customers, time, beams) => {\n  customers.forEach((customer) => {\n    customer.performance.sources = getSources(customer, beams, time);\n    customer.performance = {\n      ...customer.performance,\n      chargeState: getChargeStates(customer, time),\n      chargeStateNoBeams: getChargeStates(customer, time, false),\n    };\n    const [totalDischarge, dischargeSaved, timeCharged] = getDischargeSaved(customer);\n    const [lowestChargeStateBeams, lowestChargeStateNoBeams] = getLowestChargeState(customer);\n    customer.summary = {\n      totalDischarge,\n      dischargeSaved,\n      timeCharged,\n      lowestChargeStateBeams,\n      lowestChargeStateNoBeams,\n    };\n  });\n};\n\nconst simulateConstellations = (time, constellations, customers, spacePowers) => constellations.map((constellation) => {\n  const satellites = constellation.satellites.map((id) => customers.find((customer) => customer.id === id));\n  return {\n    ...constellation,\n    isCustomer: true,\n    spacePowers: spacePowers.filter((spacePower) => spacePower.constellation === constellation.id).map((spacePower) => spacePower.id),\n    performance: {\n      chargeState: time.map((t, index) => satellites.reduce((prev, current) => prev + current.performance.chargeState[index], 0) / customers.length),\n      chargeStateNoBeams: time.map((t, index) => satellites.reduce((prev, current) => prev + current.performance.chargeStateNoBeams[index], 0) / customers.length),\n    },\n    summary: {\n      // totalDischarge: satellites.reduce((prev, current) => prev + current.summary.totalDischarge, 0),\n      dischargeSaved: satellites.reduce((prev, current) => prev + current.summary.dischargeSaved, 0),\n      timeCharged: satellites.reduce((prev, current) => prev + current.summary.timeCharged, 0),\n      lowestChargeStateBeams: satellites.reduce((prev, current) => {\n        const c = current.summary.lowestChargeStateBeams;\n        return prev < c ? prev : c;\n      }, satellites[0].summary.lowestChargeStateBeams),\n      lowestChargeStateNoBeams: satellites.reduce((prev, current) => {\n        const c = current.summary.lowestChargeStateNoBeams;\n        return prev < c ? prev : c;\n      }, satellites[0].summary.lowestChargeStateNoBeams),\n    },\n  };\n});\n\nconst handleMissionRequest = (req, length = SIM_LENGTH, frames = FRAMES) => {\n  const [time, sun, earth] = simulateBaseData(req.constellations[0].satellites[0], length, frames);\n  let constellations = initializeConstellations(req.constellations);\n  const customers = initializeCustomers(req.constellations, time, sun);\n  const [spacePowers, beams] = simulateSpacePowers(time, sun, req.constellations, customers);\n  simulateBatteries(customers, time, beams);\n  constellations = simulateConstellations(time, constellations, customers, spacePowers);\n  return {\n    success: true,\n    time,\n    satellites: {\n      customers,\n      spacePowers,\n    },\n    constellations,\n    beams,\n    sun,\n    earth,\n  };\n};\n\nconst generatePartialMission = (req, length = SIM_LENGTH, frames = FRAMES) => {\n  const [time, sun, earth] = simulateBaseData(req.constellations[0].satellites[0], length, frames);\n  const constellations = initializeConstellations(req.constellations);\n  const customers = initializeCustomers(req.constellations, time, sun);\n  return {\n    time,\n    constellations,\n    satellites: {\n      customers,\n    },\n    sun,\n    earth,\n  };\n};\n\nconst handleOptimizerMission = (mission, req) => {\n  const [spacePowers, beams] = simulateSpacePowers(\n    mission.time,\n    mission.sun,\n    req.constellations,\n    mission.satellites.customers,\n  );\n  simulateBatteries(mission.satellites.customers, mission.time, beams);\n  const constellations = simulateConstellations(\n    mission.time,\n    mission.constellations,\n    mission.satellites.customers,\n    spacePowers,\n  );\n  return {\n    ...mission,\n    success: true,\n    satellites: {\n      customers: mission.satellites.customers,\n      spacePowers,\n    },\n    constellations,\n    beams,\n  };\n};\n\nexport {\n  handleMissionRequest, simulateBaseData, initializeConstellations, initializeCustomers,\n  simulateSpacePowers, simulateBatteries, simulateConstellations, generatePartialMission,\n  handleOptimizerMission,\n  MissionSchema,\n};\n","import { FRAMES, SIM_LENGTH } from '../../Util/constants';\nimport {\n  initializeConstellations, initializeCustomers,\n  simulateBaseData, simulateBatteries, simulateConstellations, simulateSpacePowers,\n} from '../mission';\n\nonmessage = function (event) {\n  const { req } = event.data;\n  postMessage({ done: false, message: 'Simulating celestial bodies' });\n  const [time, sun, earth] = simulateBaseData(\n    req.constellations[0].satellites[0],\n    SIM_LENGTH,\n    FRAMES,\n  );\n  postMessage({ done: false, message: 'Initializing constellations' });\n  let constellations = initializeConstellations(req.constellations);\n  const customers = initializeCustomers(req.constellations, time, sun);\n  postMessage({ done: false, message: 'Initializing space power' });\n  const [spacePowers, beams] = simulateSpacePowers(\n    time,\n    sun,\n    req.constellations,\n    customers,\n    req.offsets,\n  );\n  postMessage({ done: false, message: 'Simulating power systems' });\n  simulateBatteries(customers, time, beams);\n  constellations = simulateConstellations(time, constellations, customers, spacePowers);\n  const mission = {\n    success: true,\n    time,\n    satellites: {\n      customers,\n      spacePowers,\n    },\n    constellations,\n    beams,\n    sun,\n    earth,\n  };\n\n  postMessage({ done: true, mission });\n};\n","const SIM_LENGTH = 24 * 60 * 60 * 2 * 1000; // ms\nconst FPmS = 120 / 1000;\n\nconst BEAM_DISTANCE = 1000;\nconst MIN_SPEED = 600;\nconst FRAMES = SIM_LENGTH * (FPmS / MIN_SPEED);\n\nexport {\n  FPmS,\n  SIM_LENGTH,\n  MIN_SPEED,\n  FRAMES,\n  BEAM_DISTANCE,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [212,121], () => (__webpack_require__(65955)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t955: 1,\n\t222: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","SatelliteSchema","Yup","shape","name","min","max","trim","color","matches","orbit","tle","list","meanMotionDot","required","bstar","inclination","rightAscension","eccentricity","perigee","meanAnomaly","meanMotion","power","pv","voltage","currentDensity","area","powerStoringConsumption","preset","oneOf","battery","capacity","duties","of","type","priority","integer","consumption","duration","when","is","then","cycles","simulateBaseData","constellations","payload","satelliteCount","satellites","spacePowersCount","spacePowerIndices","offsets","baseSatellite","length","frames","tles","generateTLE","epoch","Date","twoline2satrec","tle1","tle2","time","getTimeArray","epochdate","getSunPositions","getEarthRotationAngles","initializeConstellations","map","constellation","id","satellite","initializeCustomers","sun","customers","forEach","push","createSatellite","customer","positions","getSatellitePositions","params","performance","currentDuties","getCurrentDuties","load","isEclipsed","getEclipsedArray","simulateSpacePowers","spacePowers","indices","generateIndices","counts","getIndexCounts","getOffsets","index","offset","createPowerSatellite","initializeSpacePowers","beams","spacePower","satBeams","getBeams","filter","c","getBeamDuties","sources","getSources","chargeState","getChargeStates","simulateBatteries","chargeStateNoBeams","totalDischarge","dischargeSaved","timeCharged","getDischargeSaved","lowestChargeStateBeams","lowestChargeStateNoBeams","getLowestChargeState","summary","simulateConstellations","find","isCustomer","t","reduce","prev","current","onmessage","event","req","data","postMessage","done","message","earth","SIM_LENGTH","FRAMES","mission","success","BEAM_DISTANCE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","x","__webpack_exports__","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","nmd","paths","children","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","Error","replace","p","installedChunks","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}